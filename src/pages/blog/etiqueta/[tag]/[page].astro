---
import Main from '@layouts/Main.astro';
import Card from '@components/Card.astro';
import Cover from "@components/Cover.astro";
import Image from "@components/Image.astro";
import ViewPort from "@components/ViewPort.astro";
import Pagination from '@components/Pagination.astro';

import { strToDate } from '@components/Tag.astro';
import type { GetStaticPathsOptions } from '@node/astro';
import conf from '@conf';

export const name = "Noticias";
export const term = "Mis notas y artículos personales sobre tendencias y tecnología web";
export const desc = "Artículos de opinión sobre diseño, desarrollo y publicación de aplicaciones web y nuevas tecnología dedicadas a proyectos web.";
export const snap = '/dev/developer-now.svg';

import { getCollectionPosts } from "../../[page].astro";

export function getPostsTagged() {
  const posts = getCollectionPosts();
  return posts.filter((post) => {
    return ('tags' in post.data)? true: false;
  });
}

//https://docs.astro.build/es/guides/routing/#paginaci%C3%B3n-anidada
export async function getStaticPaths({ paginate }) {
  const posts = getPostsTagged();
  const tags = [...new Set(posts.map((post: any) => post.data.tags).flat())];

  return tags.flatMap((tag) => {
    const postsTagged = posts.filter((post) => post.data.tags.includes(tag));
    // const filteredPosts = allPytos.filter(({data}) => data.tags.includes(tag));
    return paginate(postsTagged, { params: { tag }, pageSize: conf.paginate });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props as any;
---

<Main class="main bg-primary bg-opacity-15" title={name+' - '+page.currentPage+': '+term} description={page.currentPage}>
<div class="bg-transparent">
<Cover src="/background.svg">
  <div class="container p-3">
    <div class="row align-items-end">
      <div class="col-12 col-lg-4 offset-lg-2 h-100 mb-3">
        <div class="bg-white bg-opacity-50 text-center p-3">
          <h1 class="h2 text-black text-center mt-3 mb-3">
            Notas y artículos <small class="badge bg-dark">{tag}</small>
          </h1>
        </div>
      </div>
      <div class="col-12 col-lg-4 h-100 mb-3">
        <p class="mb-2">
          <strong>{ page.data.length}</strong> artículos filtrados por <strong>{tag}</strong>
        </p>
        <a class="btn btn-outline-primary" href={conf.base+'/blog/1'} title="Volver al listado de todos los artículos">
          <span class="bi bi-backspace me-1"></span> Ver todos los Artículos
        </a>
      </div>
    </div>
  </div>
  <div class="bg-info bg-opacity-15">
    <div class="container-fluid p-3">
        <div class="row mt-n4" data-masonry='{"percentPosition":true}'>
        {
          page.data.map((post) => {
              const { data, slug, url } = post;
              return <div class="col-12 col-md-4 col-lg-3">
                <Card class="mb-3">
                  <div class="card-image" transition:name={'post-image-'+slug}>
                    <Image src={data.snap} view="false"/>
                  </div>
                  <div class="card-title">
                    <h2 class="h3 link-black mb-0" transition:name={'post-title-'+slug}>
                      {data.name}
                    </h2>
                  </div>
                  <div class="card-text">
                    <p class="lead mb-3">
                      {data.term}
                    </p>
                    <p class="bg-white rounded m-n2 p-2 mb-3">
                      {data.desc}
                    </p>
                    <div class="tags">
                      { (!Array.isArray(data.tags) && term) &&
                        <span class="small badge bg-custom text-primary me-1">{data.term} </span>
                      }
                      {
                      Array.isArray(data.tags) && data.tags.map((item) => {
                          return <span class="small badge bg-custom text-primary me-1">{item}</span>
                        })
                      }
                    </div>
                    <a class="float-end mb-0 btn btn-outline-primary btn-sm icon-link icon-link-hover stretched-link" href={url} title={'Ir al Artículo #'+slug}>
                      Leer <span class="bi bi-chevron-right"></span>
                    </a>
                  </div>
                </Card>
              </div>
          })
        }
      </div>
    </div>
  </div>
</Cover>
</div>
  <div class="text-centers bg-white bg-opacity-50">
    { page.end == 1 &&
      <div class="py-3 bg-white">
        <p class="lead text-center mb-0">{term}</p>
      </div>
    }
    { page.end > 1 &&
      <Pagination page={page} />
    }
  </div>
  <div class="bg-white text-center p-3">
    <a class="btn btn-primary btn-sm icon-link icon-link-hover-alt m-1" href="javascript:history.back()" title="volver atrás">
      <span class="bi bi-chevron-left"></span> Volver
    </a>
  </div>
<script is:inline src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js" integrity="sha384-GNFwBvfVxBkLMJpYMOABq3c+d3KnQxudP/mGPkzpZSTYykLBNsZEnG2D9G/X/+7D" crossorigin="anonymous" async></script>
</Main>